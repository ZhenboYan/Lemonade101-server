html
    head 
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible" content="IE=edge")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.4.0/chart.min.js")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-annotation/1.0.2/chartjs-plugin-annotation.min.js")
        script(src="https://unpkg.com/swup@latest/dist/swup.min.js")
        title Analysis | Lemonade101
        link(rel="stylesheet" href="https://lemonade101.page/base/basecss")

    body
        header(class="main-header")
            nav(class="nav main-nav")
                //- div(class="btn-toggle-nav" onclick="toggleNav()")
                ul
                    li
                        a(href="https://lemonade101.page") Home
            
        main(id="swup" class="transition-fade")
            nav(class="nav main-nav-second")
                ul
                    li
                        a(href="https://lemonade101.page/chart") Bar
                    li
                        a(href="https://lemonade101.page/chart/monthly") Monthly
                    li
                        a(href="https://lemonade101.page/chart/monthly/mealtime") Meal Time
                    li
                        a(href="https://lemonade101.page/chart/monthly/frequency" class="feedingchart") Frequency
                    li
                        a(href="https://lemonade101.page/chart/monthly/past") Past
                    
                
            nav(class="nav main-nav")

            h6(class="fourthchart") Meal Time Frequency
            

            div(class="container container-chart" width = "100%" height="50%")
                canvas(id="myChart")
                script.
                    console.log("Please Refresh the Page");

                    let myChart = document.getElementById('myChart').getContext('2d');
                    // Chart.defaults.font.family = 'Georgia';
                    Chart.defaults.font.size=12;
                    Chart.defaults.color='black';

                    let index = 0;
                    var obj = !{JSON.stringify(obj)};
                    let day_counter = 0;
                    let i = 0;
                    let storage = [];
                    let counter = 0;
                    
                    for(hour = 0; hour < 24;hour++){
                        storage[hour] = 0;
                    }

                    for(counter; counter < obj.length - 1; counter++){
                        if(String(obj[counter].Status) == 'Eating'){
                            if(Math.abs(obj[counter].Change) < 22 && Math.abs(obj[counter].Change) > 1){
                                let array = String(obj[counter].Hour).split(":");
                                let zero = parseInt(array[0],10);
                                storage[zero] = storage[zero] + 1;
                            }
                        }
                    }

                    for(t = 0; t < 24;t++){
                        console.log(storage[t]);
                    }
                    
                    let text_label = "Number of Meals";
                    text_label.concat(String(obj[obj.length-1].Day));
                    // loop through each date to find the sum of consumption
                    let dataChart = new Chart(myChart,{
                        type: 'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea
                        data: {
                            labels:['0 AM','1 AM','2 AM','3 AM','4 AM','5 AM','6 AM','7 AM','8 AM','9 AM','10 AM','11 AM','12 PM','1 PM','2 PM','3 PM','4 PM ','5 PM','6 PM','7 PM','8 PM','9 PM','10 PM','11 PM'],
                            datasets:[{
                                label:text_label,
                                data:[
                                ],
                                backgroundColor:[
                                    'rgb(44, 62, 80)',
                                    'rgb(52, 73, 94)',
                                    'rgb(127, 140, 141)',
                                    'rgb(170, 183, 184)',
                                    'rgb(189, 195, 199)',
                                    'rgb(211, 84, 0)',
                                    'rgb(230, 126, 34)',
                                    'rgb(243, 156, 18)',
                                    'rgb(241, 196, 15)',
                                    'rgb(231, 76, 60)',
                                    'rgb(192, 57, 43)',
                                    'rgb(46, 204, 113)',
                                    'rgb(39, 174, 96 )',
                                    'rgb(22, 160, 133)',
                                    'rgb(26, 188, 156)',
                                    'rgb(52, 152, 219)',
                                    'rgb(41, 128, 185)',
                                    'rgb(142, 68, 173)',
                                    'rgb(155, 89, 182)',
                                    'rgb(110, 44, 0)',
                                    'rgb(120, 40, 31)',
                                    'rgb(100, 30, 22)',
                                    'rgb(23, 32, 42)',
                                    'black'
                                    //- 'rgb(44, 62, 80)',
                                    //- 'rgb(44, 62, 80)'
                                ],
                                borderWidth:0.5,
                                borderColor: 'pink',
                                hoverBorderWidth:3,
                                hoverBorderColor: 'white',
                                fill: false,
                                data: storage
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    ticks:{
                                        //- stepSize: 1,
                                        //- min: 0,
                                        //- max: 24
                                    },
                                    title: {
                                        display: true,
                                        text: 'Time of the Day',
                                        color: 'tomato'
                                    }
                                },
                            },
                            elements: {
                                point:{
                                    //- radius: 4
                                }
                            },
                            plugins:{
                                title:{
                                    display:true,
                                    text:'Hour of the Day and Meal Frequency'
                                },
                                legend:{
                                    display:false, //true for pie
                                    position:'right',
                                    labels:{
                                        color:'black',
                                        font:{
                                            size: 20
                                        }
                                    }
                                },
                                annotation: {
                                    //- annotations: {
                                    //-     line_min:{
                                    //-         type: 'line',
                                    //-         yMin: 50,
                                    //-         yMax: 50,
                                    //-         borderColor: 'green',
                                    //-         borderWidth: 2,
                                    //-     },
                                    //-     line_max:{
                                    //-         type: 'line',
                                    //-         yMin: 70,
                                    //-         yMax: 70,
                                    //-         borderColor: 'red',
                                    //-         borderWidth: 2,
                                    //-     }
                                    //- }
                                }
                            },
                            layout:{
                                padding:{
                                    left:0,
                                    right:0,
                                    //- bottom:550,
                                    top:0
                                }
                            }
                        }                
                    })
                    
                    const swup = new Swup;
                    const init = () =>{
                        if(!window.location.hash) {
                                window.location = window.location + '#loaded';
                                window.location.reload();
                        }
                    }
                    swup.on('contentReplaced', init);